{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","key","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","getMyNweets","where","orderBy","get","updateProfile","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","from","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a27ef9d.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n    appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\n\nconst AuthForm = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n    const onChange = (event) => {\n        const {\n            target: { name, value },\n        } = event;\n        if (name === \"email\") {\n            setEmail(value);\n        } else if (name === \"password\") {\n            setPassword(value);\n        }\n    };\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            let data;\n            if (newAccount) {\n                // create account\n                data = await authService.createUserWithEmailAndPassword(\n                    email,\n                    password\n                );\n            } else {\n                // log in\n                data = await authService.signInWithEmailAndPassword(\n                    email,\n                    password\n                );\n            }\n            console.log(data);\n        } catch (error) {\n            setError(error.message);\n        }\n    };\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n    return (\n        <>\n            <form onSubmit={onSubmit} className=\"container\">\n                <input\n                    name=\"email\"\n                    type=\"text\"\n                    placeholder=\"Email\"\n                    required\n                    value={email}\n                    onChange={onChange}\n                    className=\"authInput\"\n                />\n                <input\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    required\n                    value={password}\n                    onChange={onChange}\n                    className=\"authInput\"\n                />\n                <input\n                    type=\"submit\"\n                    className=\"authInput authSubmit\"\n                    value={newAccount ? \"Create Account\" : \"Log In\"}\n                />\n                {error && <span className=\"authError\">{error}</span>}\n            </form>\n            <span onClick={toggleAccount} className=\"authSwitch\">\n                {newAccount ? \"Sign In\" : \"Create Account\"}\n            </span>\n        </>\n    );\n};\n\nexport default AuthForm;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faTwitter,\n    faGoogle,\n    faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport AuthForm from \"components/AuthForm\";\n\nconst Auth = () => {\n    const onSocialClick = async (event) => {\n        const {\n            target: { name },\n        } = event;\n        let provider;\n        if (name === \"google\") {\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        } else if (name === \"github\") {\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n        await authService.signInWithPopup(provider);\n    };\n    return (\n        <div className=\"authContainer\">\n            <FontAwesomeIcon\n                icon={faTwitter}\n                color={\"#04AAFF\"}\n                size=\"3x\"\n                style={{ marginBottom: 30 }}\n            />\n            <AuthForm />\n            <div className=\"authBtns\">\n                <button\n                    onClick={onSocialClick}\n                    name=\"google\"\n                    className=\"authBtn\"\n                >\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\n                </button>\n                <button\n                    onClick={onSocialClick}\n                    name=\"github\"\n                    className=\"authBtn\"\n                >\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\n                </button>\n            </div>\n        </div>\n    );\n};\nexport default Auth;\n","import { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n    const [editing, setEditing] = useState(false);\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\n            \"Are you sure you want to delete this nweet?\"\n        );\n        if (ok) {\n            // delete nweet;\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\n            if (nweetObj.attachmentUrl !== \"\") {\n                await storageService\n                    .refFromURL(nweetObj.attachmentUrl)\n                    .delete();\n            }\n        }\n    };\n    const toggleEditing = () => setEditing((prev) => !prev);\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\n            text: newNweet,\n        });\n        setEditing(false);\n    };\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setNewNweet(value);\n    };\n    return (\n        <div className=\"nweet\">\n            {editing ? (\n                <>\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Edit your nweet\"\n                            value={newNweet}\n                            required\n                            autoFocus\n                            onChange={onChange}\n                            className=\"formInput\"\n                        />\n                        <input\n                            type=\"submit\"\n                            value=\"Update Nweet\"\n                            className=\"formBtn\"\n                        />\n                    </form>\n                    <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                        Cancel\n                    </span>\n                </>\n            ) : (\n                <>\n                    <h4>{nweetObj.text}</h4>\n                    {nweetObj.attachmentUrl && (\n                        <img src={nweetObj.attachmentUrl} />\n                    )}\n                    {isOwner && (\n                        <div class=\"nweet__actions\">\n                            <span onClick={onDeleteClick}>\n                                <FontAwesomeIcon icon={faTrash} />\n                            </span>\n                            <span onClick={toggleEditing}>\n                                <FontAwesomeIcon icon={faPencilAlt} />\n                            </span>\n                        </div>\n                    )}\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default Nweet;\n","import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { dbService, storageService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n    const [nweet, setNweet] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n    const onSubmit = async (event) => {\n        if (nweet === \"\") {\n            return;\n        }\n        event.preventDefault();\n        let attachmentUrl = \"\";\n        if (attachment !== \"\") {\n            const attachmentRef = storageService\n                .ref()\n                .child(`${userObj.uid}/${uuidv4()}`);\n            const response = await attachmentRef.putString(\n                attachment,\n                \"data_url\"\n            );\n            attachmentUrl = await response.ref.getDownloadURL();\n        }\n        const nweetObj = {\n            text: nweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentUrl,\n        };\n        await dbService.collection(\"nweets\").add(nweetObj);\n        setNweet(\"\");\n        setAttachment(\"\");\n    };\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setNweet(value);\n    };\n    const onFileChange = (event) => {\n        const {\n            target: { files },\n        } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const {\n                currentTarget: { result },\n            } = finishedEvent;\n            setAttachment(result);\n            console.log(finishedEvent);\n            console.log(result);\n        };\n        reader.readAsDataURL(theFile);\n    };\n    const onClearAttachment = () => setAttachment(\"\");\n    return (\n        <form onSubmit={onSubmit} className=\"factoryForm\">\n            <div className=\"factoryInput__container\">\n                <input\n                    className=\"factoryInput__input\"\n                    value={nweet}\n                    onChange={onChange}\n                    type=\"text\"\n                    placeholder=\"What's on your mind?\"\n                    maxLength={120}\n                />\n                <input\n                    type=\"submit\"\n                    value=\"&rarr;\"\n                    className=\"factoryInput__arrow\"\n                />\n            </div>\n            <label for=\"attach-file\" className=\"factoryInput__label\">\n                <span>Add photos</span>\n                <FontAwesomeIcon icon={faPlus} />\n            </label>\n            <input\n                id=\"attach-file\"\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={onFileChange}\n                style={{\n                    opacity: 0,\n                }}\n            />\n\n            {attachment && (\n                <div className=\"factoryForm__attachment\">\n                    <img\n                        src={attachment}\n                        style={{\n                            backgroundImage: attachment,\n                        }}\n                    />\n                    <div\n                        className=\"factoryForm__clear\"\n                        onClick={onClearAttachment}\n                    >\n                        <span>Remove</span>\n                        <FontAwesomeIcon icon={faTimes} />\n                    </div>\n                </div>\n            )}\n        </form>\n    );\n};\n\nexport default NweetFactory;\n","import React, { useEffect, useState } from \"react\";\nimport { dbService } from \"fbase\";\nimport Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n    const [nweets, setNweets] = useState([]);\n    useEffect(() => {\n        dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n            const nweetArray = snapshot.docs.map((doc) => ({\n                id: doc.id,\n                ...doc.data(),\n            }));\n            setNweets(nweetArray);\n        });\n    }, []);\n    return (\n        <div className=\"container\">\n            <NweetFactory userObj={userObj} />\n            <div style={{ marginTop: 30 }}>\n                {nweets.map((nweet) => (\n                    <Nweet\n                        key={nweet.id}\n                        nweetObj={nweet}\n                        isOwner={nweet.creatorId === userObj.uid}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n};\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n    <nav>\n        <ul\n            style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}\n        >\n            <li>\n                <Link to=\"/\" style={{ marginRight: 10 }}>\n                    <FontAwesomeIcon\n                        icon={faTwitter}\n                        color={\"#04AAFF\"}\n                        size=\"2x\"\n                    />\n                </Link>\n            </li>\n            <li>\n                <Link\n                    to=\"/profile\"\n                    style={{\n                        marginLeft: 10,\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        alignItems: \"center\",\n                        fontSize: 12,\n                    }}\n                >\n                    <FontAwesomeIcon\n                        icon={faUser}\n                        color={\"#04AAFF\"}\n                        size=\"2x\"\n                    />\n                    <span style={{ marginTop: 10 }}>\n                        {userObj.displayName\n                            ? `${userObj.displayName}의 Profile`\n                            : \"Profile\"}\n                    </span>\n                </Link>\n            </li>\n        </ul>\n    </nav>\n);\n\nexport default Navigation;\n","import React, { useEffect, useState } from \"react\";\nimport { authService, dbService } from \"fbase\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default ({ refreshUser, userObj }) => {\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\");\n    };\n    const getMyNweets = async () => {\n        const nweets = await dbService\n            .collection(\"nweets\")\n            .where(\"creatorId\", \"==\", userObj.uid)\n            .orderBy(\"createdAt\")\n            .get();\n        console.log(nweets.docs.map((doc) => doc.data()));\n    };\n    useEffect(() => {\n        getMyNweets();\n    }, []);\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setNewDisplayName(value);\n    };\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if (userObj.displayName !== newDisplayName) {\n            await userObj.updateProfile({\n                displayName: newDisplayName,\n            });\n            refreshUser();\n        }\n    };\n    return (\n        <div className=\"container\">\n            <form onSubmit={onSubmit} className=\"profileForm\">\n                <input\n                    onChange={onChange}\n                    type=\"text\"\n                    autoFocus\n                    placeholder=\"Display name\"\n                    value={newDisplayName}\n                    className=\"formInput\"\n                />\n                <input\n                    type=\"submit\"\n                    value=\"Update Profile\"\n                    className=\"formBtn\"\n                    style={{\n                        marginTop: 10,\n                    }}\n                />\n            </form>\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n                Log Out\n            </span>\n        </div>\n    );\n};\n","import React from \"react\";\nimport {\n    HashRouter as Router,\n    Redirect,\n    Route,\n    Switch,\n} from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Navigation from \"components/Navigation\";\nimport Profile from \"routes/Profile\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj} />}\n            <Switch>\n                {isLoggedIn ? (\n                    <div\n                        style={{\n                            maxWidth: 890,\n                            width: \"100%\",\n                            margin: \"0 auto\",\n                            marginTop: 80,\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                        }}\n                    >\n                        <Route exact path=\"/\">\n                            <Home userObj={userObj} />\n                        </Route>\n                        <Route exact path=\"/profile\">\n                            <Profile\n                                refreshUser={refreshUser}\n                                userObj={userObj}\n                            />\n                        </Route>\n                        <Redirect from=\"*\" to=\"/\" />\n                    </div>\n                ) : (\n                    <>\n                        <Route exact path=\"/\">\n                            <Auth />\n                        </Route>\n                        <Redirect from=\"*\" to=\"/\" />\n                    </>\n                )}\n            </Switch>\n        </Router>\n    );\n};\nexport default AppRouter;\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n    const [init, setInit] = useState(false);\n    const [userObj, setUserObj] = useState(null);\n    useEffect(() => {\n        authService.onAuthStateChanged((user) => {\n            if (user) {\n                setUserObj({\n                    displayName: user.displayName,\n                    uid: user.uid,\n                    updateProfile: (args) => user.updateProfile(args),\n                });\n            } else {\n                setUserObj(null);\n            }\n            setInit(true);\n        });\n    }, []);\n    const refreshUser = () => {\n        const user = authService.currentUser;\n        setUserObj({\n            displayName: user.displayName,\n            uid: user.uid,\n            updateProfile: (args) => user.updateProfile(args),\n        });\n    };\n    return (\n        <>\n            {init ? (\n                <AppRouter\n                    refreshUser={refreshUser}\n                    isLoggedIn={Boolean(userObj)}\n                    userObj={userObj}\n                />\n            ) : (\n                \"Initializing...\"\n            )}\n        </>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}